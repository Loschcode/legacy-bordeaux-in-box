{"version":3,"sources":["app/config.coffee","app/controllers/example-controller.coffee","app/controllers/masterbox/customer/purchase/billing-address.coffee","app/controllers/masterbox/customer/purchase/choose-spot.coffee","app/controllers/masterbox/customer/purchase/payment.coffee","app/controllers/masterbox/guest/home/index.coffee","app/core/bootstrap.coffee","app/core/controller.coffee","app/core/view.coffee","app/helpers.coffee","app/initialize.coffee","app/libraries/admin-sidebar.coffee","app/start.coffee","app/validators.coffee"],"names":[],"mappings":"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","file":"../public/javascripts/app.js","sourcesContent":["#--------------------------------------------------------------------------\n# Config\n#--------------------------------------------------------------------------\n#\n# Sometimes you need to put some configuration variables for your project,\n# here it's the right place for that !\n#\n##\n\nmodule.exports =\n\n  stripe:\n    testing: 'pk_test_HNPpbWh3FV4Lw4RmIQqirqsj'\n    production: 'pk_live_EhCVbntIqph3ppfNCiN6wq3x'\n","#--------------------------------------------------------------------------\n# Example Controller\n#--------------------------------------------------------------------------\n#\n# That controller is just an example.\n#\n# @see http://gothamjs.io/documentation/1.0.0/controllers\n##\n\n# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Example extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n\n# Export\nmodule.exports = Example\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass BillingAddress extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    @on 'click', '#copy', @copyFormDestination\n\n  ##\n  # Copy the form destination to the form billing\n  ##\n  copyFormDestination: (e) ->\n\n    e.preventDefault()\n\n    fields = ['city', 'zip', 'address']\n\n    _.each fields, (field) =>\n\n      # Get value of the field in the form\n      value = $('[name=destination_' + field + ']').val()\n\n      # Paste it\n      $('[name=billing_' + field + ']').val(value)\n\n# Export\nmodule.exports = BillingAddress\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass ChooseSpot extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    @on 'click', 'label', @displayGoogleMap\n\n  displayGoogleMap: ->\n\n    # Hide each google map buttons\n    $('[id^=gmap]').addClass('+hidden')\n\n    id = $(this).attr('for')\n\n    # If it's not already displayed\n    if $('#gmap-' + id).hasClass('+hidden')\n\n      # Display it\n      $('#gmap-' + id).stop().hide().removeClass('+hidden').fadeIn()\n\n\n# Export\nmodule.exports = ChooseSpot\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Payment extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n    @initStripe()\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    $('#trigger-payment').click (e) =>\n      \n      # Catch default behavior of click\n      e.preventDefault()\n\n      # Security\n      unless $(this).prop('disabled') is true\n        \n        # Add state button\n        @displayLoading('En cours de chargement')\n\n        # Open modal\n        @handler.open\n          name: 'Bordeaux in Box'\n          description: 'Commande Box'\n          currency: 'eur'\n          amount: $('#gotham').data('amount')\n          email: $('#gotham').data('customer-email')\n\n  initStripe: =>\n\n    # Configure stripe modal\n    @handler = StripeCheckout.configure\n      key: _.getStripeKey()\n      image: 'https://s3.amazonaws.com/stripe-uploads/acct_14e5CdIIyezb3ziumerchant-icon-1452677496121-bdxinbox.png'\n      locale: 'fr'\n      token: @afterPayment\n      allowRememberMe: true\n      \n      opened: =>\n\n        @displayDefault()\n\n  afterPayment: (token) =>\n    secret = token.id\n\n    @displayLoading('En cours de redirection')\n\n    $('#stripe-token').val(secret)\n    $('#payment-form').submit()\n\n  displayLoading: (message) ->\n\n    $('#trigger-payment').prop('disabled', true).addClass('--disabled').html('<i class=\"fa fa-spinner fa-spin\"></i> ' + message)\n\n  displayDefault: =>\n\n    $('#trigger-payment').prop('disabled', false).removeClass('--disabled').html('<i class=\"fa fa-credit-card\"></i> Procéder au paiement sécurisé')\n\n\n\n# Export\nmodule.exports = Payment\n","# Require the controller library of Gotham\nController = require 'core/controller'\n\n\nclass Index extends Controller\n\n  ##\n  # Before\n  #\n  # Executed before the run action. You can use\n  # @stop() in this method to stop the execution\n  # of the controller\n  #\n  ##\n  before: ->\n\n    @smoothScroll()\n\n  ##\n  # Run\n  #\n  # The main entry of the controller.\n  # Your code start here\n  #\n  ##\n  run: ->\n\n    @on 'click', '.js-no-boxes', @alertNoBoxes\n\n  ##\n  # When we don't have anymore boxes and the user clicks \n  # on the button to order, we display a sweet alert\n  ##\n  alertNoBoxes: (e) =>\n\n    e.preventDefault()\n\n    swal\n      title: $('#gotham').data('no-boxes-title')\n      text: $('#gotham').data('no-boxes-text')\n      type: 'error'\n      confirmButtonColor: '#D83F66'\n      html: true\n\n  ##\n  # When an user click on an anchor, we do an auto\n  # smooth scroll.\n  ##\n  smoothScroll: ->\n\n    smoothScroll.init\n      selector: '.js-anchor'\n\n\n\n# Export\nmodule.exports = Index\n","##\n# Bootstrap\n#\n# Skeleton of gotham\n##\nclass Bootstrap\n\n  ##\n  # Run\n  #\n  # Load the helpers, start, and invoke the controller\n  ##\n  run: ->\n\n    # Load lo-dash helpers\n    require 'helpers'\n\n    # Load custom validators\n    require 'validators'\n\n    # Load start\n    require 'start'\n\n    # Fetch the controller to execute\n    controller = $('#gotham').data('controller')\n\n    # No controller defined\n    unless controller?\n      return\n\n    # Controller defined is empty\n    if _.isEmpty(controller)\n      return\n\n    # Format to the right path\n    pathController = @_formatPath(controller)\n\n    # Invoke controller\n    controller = require 'controllers/' + pathController\n    controller  = new controller()\n\n    # Check if we have a method before\n    if controller['before']?\n\n      # Run the before method\n      controller.before()\n\n    unless controller._gothamStop\n\n      # Run the controller\n      controller.run()\n\n  ##\n  # Format path\n  #\n  # Will replace all dots by a slash\n  #\n  # @param [String] The string to format\n  #\n  ##\n  _formatPath: (str) ->\n\n    str.split('.').join('/')\n\n\nmodule.exports = Bootstrap\n","View = require 'core/view'\n\n##\n# Controller\n#\n# Basic controller structure.\n##\nclass Controller\n\n  # Flag to know if we must run or not the controller\n  # It's linked with the before() method.\n  _gothamStop: false\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Stop\n  #\n  # If we call this method in the before method,\n  # it will not execute the run() method\n  #\n  ##\n  stop: ->\n\n    @_gothamStop = true\n\n  ##\n  # Log\n  #\n  # Shortcut to display a console.log\n  #\n  # @param [Mixed] Value to display\n  #\n  ##\n  log: (value) ->\n\n    console.log(value)\n\n  ##\n  # On\n  #\n  # Shortcut to create a jquery \"on\" event\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  on: (trigger, selector, handler) ->\n\n    $(selector).on trigger, handler\n\n  ##\n  # Off\n  #\n  # Shortcut to create a jquery \"off\" event\n  #\n  # @param [String] Trigger to shutdown (Ex. click)\n  # @param [String] The selector attached\n  # @param [Function] The handler\n  #\n  ##\n  off: (trigger, selector, handler) ->\n\n    $(selector).off trigger, handler\n\n  ##\n  # Delayed\n  #\n  # Like \"on\" jquery event but listen new elements\n  # added in the page\n  #\n  # @param [String] Trigger to listen (Ex. click)\n  # @param [String] The selector to attach\n  # @param [Function] The callback\n  #\n  ##\n  delayed: (trigger, selector, handler) ->\n\n    $(document).on trigger, selector, handler\n\n  ##\n  # View\n  #\n  # Shortcut to render a view\n  #\n  # @param [String] View to render\n  # @param [Object] Datas to compile in the view\n  #\n  ##\n  view: (template, datas) ->\n\n    view = new View()\n\n    return view.render template, datas\n\nmodule.exports = Controller\n","##\n# View\n#\n# Micro-Facade for Handlebars.\n##\nclass View\n\n  ##\n  # Constructor\n  #\n  # The constructor\n  #\n  ##\n  constructor: ->\n\n  ##\n  # Render\n  #\n  # Render a template\n  #\n  # @param [String] Template to compile\n  # @param [Object] Datas to compile with the template\n  #\n  ##\n  render: (template, datas) ->\n\n    template = template.split('.').join('/')\n\n    template = require 'views/' + template\n\n    return template(datas)\n\nmodule.exports = View\n","#--------------------------------------------------------------------------\n# Helpers\n#--------------------------------------------------------------------------\n#\n# If you need to create some functions to use in your application, you are\n# in the right place !\n#\n# Gotham uses lo-dash and the concept of mixins.\n#\n# @see http://gothamjs.io/documentation/1.0.0/helpers\n##\nConfig = require 'config'\n\n##\n# It returns the stripe key depending the environment\n##\n_.mixin getStripeKey: ->\n\n  environment = $('body').data('environment')\n\n  if environment is 'production'\n    return Config.stripe.production\n\n  return Config.stripe.testing\n\n\n\n\n##\n# If laravel returned a form error, it displays a sweet alert\n##\n_.mixin notificationFormErrors: ->\n\n  hasErrors = _.trim($('#gotham').data('form-errors'))\n\n  if _.isEmpty(hasErrors)\n    return\n\n  unless hasErrors == '1'\n    return\n\n  titleErrors = _.trim($('#gotham').data('form-errors-title'))\n  textErrors = _.trim($('#gotham').data('form-errors-text'))\n\n  # Guess tittle\n  unless _.isEmpty(titleErrors)\n    title = titleErrors\n  else\n    title = 'Attention'\n\n  # Guess text\n  unless _.isEmpty(textErrors)\n    text = textErrors\n  else\n    text = 'Des erreurs sont présentes dans le formulaire'\n\n\n  # Open the modal\n  swal\n    title: title\n    text: text\n    type: 'error'\n    confirmButtonColor: '#D83F66'\n    html: true\n\n##\n# If laravel returned a success message, it displays a sweet alert\n##\n_.mixin notificationSuccessMessage: ->\n\n  successMessage = _.trim($('#gotham').data('success-message'))\n\n  if _.isEmpty(successMessage)\n    return\n\n  swal\n    title: 'Bravo !'\n    text: successMessage\n    type: 'success'\n    confirmButtonColor: '#A5DC86'\n    html: true\n","#--------------------------------------------------------------------------\n# Initialize\n#--------------------------------------------------------------------------\n#\n# It's the main entry of your gotham application. We will require the\n# bootstrap file and run gotham.\n##\nBootstrap = require 'core/bootstrap'\n\n# Hey sir, is the document ready ?\n$ ->\n\n  # Yep ! We will run gotham !\n  bootstrap = new Bootstrap\n\n    # We set the browser's request\n    request: window.location.pathname\n\n  bootstrap.run()\n","class AdminSidebar\n\n  constructor: ->\n\n    $('#sidebar').on 'mouseenter', @sidebarEnter\n    $('#sidebar').on 'mouseleave', @sidebarLeave\n\n  sidebarEnter: ->\n\n    $(this).css('width', '270px')\n    $('#sidebar-brand').css('display', 'block')\n\n  sidebarLeave: ->\n\n    $(this).css('width', '60px')\n    $('#sidebar-brand').css('display', 'none')\n\n\nmodule.exports = AdminSidebar","#--------------------------------------------------------------------------\n# Start\n#--------------------------------------------------------------------------\n#\n# Gotham will run after that file the \"router\" system. It's the right place\n# to put some code to execute globally like the init of jQuery plugins, etc.\n##\n#\nAdminSidebar = require 'libraries/admin-sidebar'\n\n#--------------------------------------------------------------------------\n# Global elements\n#--------------------------------------------------------------------------\n#\n\n##\n# Polify placeholders for old browsers\n##\n$('input, textarea').placeholder()\n\n##\n# Notify errors from froms validated by Laravel\n##\n_.notificationFormErrors()\n\n##\n# Notify success message returned by Laravel\n##\n_.notificationSuccessMessage()\n\n##\n# Chosen select form\n##\n$('.js-chosen').chosen\n  disable_search_threshold: 30\n\n##\n# Labelauty (Prettify checkboxes and radios html tags)\n##\n$(':checkbox').labelauty()\n$(':radio').labelauty()\n\n\n#--------------------------------------------------------------------------\n# MasterBox admin elements\n#--------------------------------------------------------------------------\n#\nif $('#gotham-layout').data('layout') is 'masterbox-admin'\n\n  # Manage sidebar hover / unhover\n  new AdminSidebar()\n\n  # Datatable \n  $('.js-datatable-simple').DataTable\n    length: false\n    language:\n      lengthMenu: \"Afficher _MENU_ résultats par page\"\n      zeroRecords: \"Aucun enregistrement trouvé\"\n      info: \"Page _PAGE_ sur _PAGES_\"\n      infoEmpty: \"Aucun enregistrement disponible\"\n      infoFiltered: \"(filtré sur _MAX_ enregistrements)\"\n      search: 'Chercher: '\n\n\n","#--------------------------------------------------------------------------\n# Errors\n#--------------------------------------------------------------------------\n#\n# If you want to change / add errors for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#custom-error\n##\nValidator.errors\n\n#--------------------------------------------------------------------------\n# Attributes\n#--------------------------------------------------------------------------\n#\n# If you want to change / add attributes for the Validator library, you can\n# do it here.\n#\n# @see http://gothamjs.io/documentation/1.0.0/validator#change-attributes\n##\nValidator.attributes\n"]}